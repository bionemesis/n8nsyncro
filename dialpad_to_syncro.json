{
  "name": "",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"EnvVariables\"].json[\"syncro_baseurl\"]}}/api/v1/search?query={{$json[\"body\"][\"external_number\"].replace(/\\+/g, '').replace(/^[01]/, '')}}",
        "options": {}
      },
      "name": "GetCustomer",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        710,
        300
      ],
      "credentials": {
        "httpHeaderAuth": "Syncro"
      },
      "notes": "This will take the inbound webhook information and search for customers/contacts matching that number (stripped of +1 and anything non-numeric)."
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "fromsyncro",
        "responseMode": "lastNode",
        "responseData": "allEntries",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        420,
        300
      ],
      "webhookId": "dialpad_to_syncro"
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"EnvVariables\"].json[\"syncro_baseurl\"]}}/api/v1/tickets",
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "customer_id",
              "value": "={{$node[\"Contacts\"].json[\"contacts\"][0][\"customer_id\"]}}"
            },
            {
              "name": "subject",
              "value": "=Phone call from {{$node[\"Function\"].json[\"contacts\"][0][\"firstname\"]}} {{$node[\"Function\"].json[\"contacts\"][0][\"lastname\"]}} ({{$node[\"Webhook\"].json[\"body\"][\"contact\"][\"phone\"]}})"
            },
            {
              "name": "status",
              "value": "In Progress"
            },
            {
              "name": "contact_id",
              "value": "={{$node[\"Contacts\"].json[\"contacts\"][0][\"id\"]}}"
            },
            {
              "name": "user_id",
              "value": "={{$node[\"EnvVariables\"].parameter[\"values\"][\"string\"][1][\"value\"]}}"
            }
          ]
        }
      },
      "name": "CreateTicket",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1550,
        230
      ],
      "credentials": {
        "httpHeaderAuth": "Syncro"
      },
      "notes": "This creates a new ticket with the information that a contact was connected to a technician."
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"EnvVariables\"].json[\"syncro_baseurl\"]}}/api/v1/tickets?contact_id={{$json[\"contacts\"][0][\"id\"]}}&status=Not%20Closed",
        "options": {}
      },
      "name": "GetTicket",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1220,
        160
      ],
      "credentials": {
        "httpHeaderAuth": "Syncro"
      },
      "notes": "This searches for any open tickets in Syncro belonging to this contact."
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node[\"GetTicket\"].json[\"tickets\"].length}}",
              "operation": "equal",
              "value2": 1
            }
          ],
          "boolean": [
            {
              "value1": "={{$json[\"tickets\"]}}",
              "value2": true
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "IFMoreThanOne",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1360,
        160
      ],
      "notes": "This determines if there is only a single ticket open for this contact. If there are more than 1 or no tickets open, it creates a new one. This is done because there is no easy way to know which open ticket pertains to their issue, so I'd rather create a new one and merge it if necessary."
    },
    {
      "parameters": {
        "operation": "append",
        "sheetId": "",
        "range": "A:B",
        "options": {
          "valueInputMode": "USER_ENTERED"
        }
      },
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [
        1840,
        80
      ],
      "credentials": {
        "googleApi": "Google"
      },
      "notes": "This saves the call ID and ticket ID to Google Sheets so that we can query that later when the call ends."
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Call",
              "value": "={{$node[\"Webhook\"].json[\"body\"][\"call_id\"]}}"
            },
            {
              "name": "Ticket",
              "value": "={{$node[\"GetTicket\"].json[\"tickets\"][0][\"id\"]}}"
            }
          ]
        },
        "options": {}
      },
      "name": "ForGoogle",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1700,
        80
      ],
      "notes": "This prepares the call ID and ticket ID for saving to Google Sheets."
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"EnvVariables\"].json[\"syncro_baseurl\"]}}/api/v1/tickets/{{$json[\"tickets\"][0][\"id\"]}}/comment",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "subject",
              "value": "=Phone call from {{$node[\"GetCustomer\"].json[\"results\"][0][\"table\"][\"_source\"][\"table\"][\"firstname\"]}} {{$node[\"GetCustomer\"].json[\"results\"][0][\"table\"][\"_source\"][\"table\"][\"lastname\"]}} ({{$node[\"Webhook\"].json[\"body\"][\"contact\"][\"phone\"]}})"
            },
            {
              "name": "body",
              "value": "={{$node[\"GetCustomer\"].json[\"results\"][0][\"table\"][\"_source\"][\"table\"][\"firstname\"]}} {{$node[\"GetCustomer\"].json[\"results\"][0][\"table\"][\"_source\"][\"table\"][\"lastname\"]}} called."
            },
            {
              "name": "hidden",
              "value": "true"
            },
            {
              "name": "user_id",
              "value": "={{$node[\"EnvVariables\"].parameter[\"values\"][\"string\"][1][\"value\"]}}"
            }
          ]
        }
      },
      "name": "UpdateTicket",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1550,
        80
      ],
      "credentials": {
        "httpHeaderAuth": "Syncro"
      },
      "notes": "This updates the ticket in Syncro that the contact called and was connected with a technician."
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Call",
              "value": "={{$node[\"Webhook\"].json[\"body\"][\"call_id\"]}}"
            },
            {
              "name": "Ticket",
              "value": "={{$node[\"CreateTicket\"].json[\"ticket\"][\"id\"]}}"
            }
          ]
        },
        "options": {}
      },
      "name": "ForGoogle1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1700,
        230
      ],
      "notes": "This prepares the call ID and ticket ID for saving to Google Sheets."
    },
    {
      "parameters": {
        "operation": "append",
        "sheetId": "",
        "range": "A:B",
        "options": {
          "valueInputMode": "USER_ENTERED"
        }
      },
      "name": "Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [
        1840,
        230
      ],
      "credentials": {
        "googleApi": "Google"
      },
      "notes": "This saves the call ID and ticket ID to Google Sheets so that we can query that later when the call ends."
    },
    {
      "parameters": {},
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1190,
        340
      ]
    },
    {
      "parameters": {
        "functionCode": "const { json: { results } } = items[0];\n\nconst getData = (results, type) => results.filter(r => r.table._index === type).map(x => ({\n   id: x.table._id,\n   firstname: x.table._source.table.firstname,\n   lastname: x.table._source.table.lastname,\n   customer_id: x.table._source.table.customer_id,\n   email: x.table._source.table.email,\n   business_name: x.table._source.table.business_name,\n   phones: x.table._source.table.phones\n }));\n \nreturn [ { json: { contacts: getData(results, 'contacts') } } ];\n"
      },
      "name": "Contacts",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        870,
        300
      ],
      "alwaysOutputData": false,
      "notes": "This separates out the contacts table from the JSON returned by the Syncro search."
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node[\"Contacts\"].json[\"contacts\"].length}}",
              "operation": "equal",
              "value2": 1
            }
          ],
          "boolean": [],
          "string": []
        }
      },
      "name": "IFContacts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1030,
        300
      ],
      "notes": "This confirms that a single contact exists from the search results. If there are no matches or more than one match, it does not proceed."
    },
    {
      "parameters": {
        "functionCode": "const { json: { results } } = items[0];\n\nconst getData = (results, type) => results.filter(r => r.table._index === type).map(x => ({\n   id: x.table._id,\n   firstname: x.table._source.table.firstname,\n   lastname: x.table._source.table.lastname,\n   customer_id: x.table._source.table.customer_id,\n   email: x.table._source.table.email,\n   business_name: x.table._source.table.business_name,\n   phones: x.table._source.table.phones\n }));\n \nreturn [ { json: { customers: getData(results, 'customers') } } ];\n"
      },
      "name": "Customers",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        870,
        490
      ],
      "notes": "This separates out the customers- table from the JSON returned by the Syncro search."
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node[\"Customers\"].json[\"customers\"].length}}",
              "operation": "equal",
              "value2": 1
            }
          ],
          "boolean": [],
          "string": []
        }
      },
      "name": "IFCustomers",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1030,
        490
      ],
      "notes": "This confirms that a single customer exists from the search results. If there are no matches or more than one match, it does not proceed."
    },
    {
      "parameters": {},
      "name": "NoOp1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1170,
        640
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"EnvVariables\"].json[\"syncro_baseurl\"]}}/api/v1/tickets",
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "customer_id",
              "value": "={{$node[\"Customers\"].json[\"customers\"][0][\"id\"]}}"
            },
            {
              "name": "subject",
              "value": "=Phone call from {{$node[\"Customers\"].json[\"customers\"][0][\"business_name\"]}} ({{$node[\"Webhook\"].json[\"body\"][\"contact\"][\"phone\"]}})"
            },
            {
              "name": "status",
              "value": "In Progress"
            },
            {
              "name": "user_id",
              "value": "={{$node[\"EnvVariables\"].parameter[\"values\"][\"string\"][1][\"value\"]}}"
            }
          ]
        }
      },
      "name": "CreateTicketForCustomer",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1220,
        480
      ],
      "credentials": {
        "httpHeaderAuth": "Syncro"
      },
      "notes": "This creates a new ticket with the information that a customer was connected to a technician."
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Call",
              "value": "={{$node[\"Webhook\"].json[\"body\"][\"call_id\"]}}"
            },
            {
              "name": "Ticket",
              "value": "={{$node[\"CreateTicketForCustomer\"].json[\"ticket\"][\"id\"]}}"
            }
          ]
        },
        "options": {}
      },
      "name": "ForGoogle2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1400,
        480
      ],
      "notes": "This prepares the call ID and ticket ID for saving to Google Sheets."
    },
    {
      "parameters": {
        "operation": "append",
        "sheetId": "",
        "range": "A:B",
        "options": {
          "valueInputMode": "USER_ENTERED"
        }
      },
      "name": "Google Sheets2",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [
        1570,
        480
      ],
      "credentials": {
        "googleApi": "Google"
      },
      "notes": "This saves the call ID and ticket ID to Google Sheets so that we can query that later when the call ends."
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "syncro_baseurl",
              "value": "https://sudbdomain.syncromsp.com"
            },
            {
              "name": "user_id",
              "value": "1234"
            }
          ]
        },
        "options": {}
      },
      "name": "EnvVariables",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        570,
        300
      ],
      "notes": "Change value of syncro_baseurl to your Syncro URL. Change value of user_id to the user_id that you want this webhook to work for."
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "EnvVariables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetTicket": {
      "main": [
        [
          {
            "node": "IFMoreThanOne",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IFMoreThanOne": {
      "main": [
        [
          {
            "node": "UpdateTicket",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CreateTicket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ForGoogle": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UpdateTicket": {
      "main": [
        [
          {
            "node": "ForGoogle",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CreateTicket": {
      "main": [
        [
          {
            "node": "ForGoogle1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ForGoogle1": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetCustomer": {
      "main": [
        [
          {
            "node": "Contacts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Customers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Contacts": {
      "main": [
        [
          {
            "node": "IFContacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IFContacts": {
      "main": [
        [
          {
            "node": "GetTicket",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Customers": {
      "main": [
        [
          {
            "node": "IFCustomers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IFCustomers": {
      "main": [
        [
          {
            "node": "CreateTicketForCustomer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CreateTicketForCustomer": {
      "main": [
        [
          {
            "node": "ForGoogle2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ForGoogle2": {
      "main": [
        [
          {
            "node": "Google Sheets2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EnvVariables": {
      "main": [
        [
          {
            "node": "GetCustomer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {}
}